{"version":3,"sources":["animations/Loading.js","animations/DownArrow.js","animations/UpArrow.js","Crypto.js","Search.js","Header.js","App.js","index.js"],"names":["defaultOptions","loop","autoplay","animationData","loading","rendererSettings","preserveAspectRatio","Loading","style","margin","options","height","width","DownArrow","UpArrow","useStyles","makeStyles","tableWidth","image","tablex","table","backgroundColor","tableCell","color","changeGreen","changeRed","cellDisplay","display","fetchCoin","a","fetch","res","json","Crypto","searchCoin","classes","useQuery","refetchInterval","data","status","console","log","filteredCoins","filter","coin","name","toLowerCase","includes","className","TableContainer","Table","size","root","TableRow","tablerow","TableCell","align","TableBody","tablebody","map","coins","src","alt","symbol","toUpperCase","current_price","toFixed","total_volume","toLocaleString","price_change_percentage_24h","market_cap","key","text","backgroundImage","searchContainer","alignItems","borderRadius","border","borderColor","focused","Search","changeHandler","TextField","id","label","placeholder","variant","onChange","InputProps","input","header","Header","Typography","queryClient","QueryClient","App","useState","setSearchCoin","QueryClientProvider","client","Grid","container","item","xs","e","target","value","crypto","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dd03af5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Lottie from \"react-lottie\";\r\nimport * as loading from \"../lottie/loading.json\";\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loading.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <div style={{ margin: \"auto\" }}>\r\n            <Lottie options={defaultOptions} height={200} width={200} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport Lottie from \"react-lottie\";\r\nimport * as downArrow from \"../lottie/downArrow.json\";\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: downArrow.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n}\r\n\r\n\r\nconst DownArrow = () => {\r\n    return (\r\n        <div style={{ margin: \"auto\" }}>\r\n            <Lottie options={defaultOptions} height={25} width={25} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownArrow\r\n","import React from 'react';\r\nimport Lottie from \"react-lottie\";\r\nimport * as upArrow from \"../lottie/upArrow.json\";\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: upArrow.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n}\r\n\r\nconst UpArrow = () => {\r\n    return (\r\n        <div>\r\n            <Lottie options={defaultOptions} height={25} width={25} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpArrow\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useQuery } from \"react-query\";\r\nimport Loading from \"./animations/Loading\";\r\nimport DownArrow from \"./animations/DownArrow\";\r\nimport UpArrow from \"./animations/UpArrow\";\r\n\r\nconst useStyles = makeStyles({\r\n  tableWidth: {\r\n    width: \"60%\",\r\n  },\r\n  image: {\r\n    height: \"30px\",\r\n    width: \"30px\",\r\n  },\r\n  tablex: {\r\n    margin: \"auto\",\r\n  },\r\n  table: {\r\n    backgroundColor: \"#1a1a1c\",\r\n  },\r\n  tableCell: {\r\n    color: \"white\",\r\n  },\r\n  changeGreen: {\r\n    color: \"green\",\r\n  },\r\n  changeRed: {\r\n    color: \"red\",\r\n  },\r\n  cellDisplay: {\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nconst fetchCoin = async () => {\r\n  const res = await fetch(\r\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n  );\r\n  return res.json();\r\n};\r\n\r\nconst Crypto = ({ searchCoin }) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, status } = useQuery(\"coin\", fetchCoin, {\r\n    refetchInterval: 30000,\r\n  });\r\n  console.log(data);\r\n\r\n  const filteredCoins = data?.filter((coin) =>\r\n    coin.name.toLowerCase().includes(searchCoin.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {status === \"loading\" ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className={classes.table}>\r\n          <TableContainer>\r\n            <Table\r\n              size=\"small\"\r\n              classes={{ root: classes.tableWidth }}\r\n              className={classes.tablex}\r\n            >\r\n              <TableRow className={classes.tablerow}>\r\n                <TableCell>Coin</TableCell>\r\n                <TableCell align=\"right\">Name</TableCell>\r\n                <TableCell align=\"right\">Symbol</TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n                <TableCell align=\"right\">Volume</TableCell>\r\n                <TableCell align=\"right\">24H change</TableCell>\r\n                <TableCell align=\"right\">Market Cap</TableCell>\r\n              </TableRow>\r\n              <TableBody className={classes.tablebody}>\r\n                {filteredCoins?.map((coins) => (\r\n                  <TableRow key={coins.key}>\r\n                    <TableCell>\r\n                      <img\r\n                        className={classes.image}\r\n                        src={coins.image}\r\n                        alt=\"imagecoin\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.tableCell}>\r\n                      {coins.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.tableCell}>\r\n                      {coins.symbol.toUpperCase()}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.tableCell}>\r\n                      ${coins.current_price.toFixed(2)}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.tableCell}>\r\n                      ${coins.total_volume.toLocaleString()}\r\n                    </TableCell>\r\n\r\n                    {coins.price_change_percentage_24h.toFixed(2) > 0 ? (\r\n                      <TableCell className={classes.changeGreen} align=\"right\">\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div style={{ display: \"inline-block\" }}>\r\n                            <UpArrow />\r\n                          </div>\r\n                          <div style={{ display: \"inline-block\" }}>\r\n                            %{coins.price_change_percentage_24h.toFixed(2)}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell align=\"right\" className={classes.changeRed}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div style={{ display: \"inline-block\" }}>\r\n                            <DownArrow />\r\n                          </div>\r\n                          <div style={{ display: \"inline-block\" }}>\r\n                            {coins.price_change_percentage_24h.toFixed(2)}%\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    )}\r\n\r\n                    <TableCell align=\"right\" className={classes.tableCell}>\r\n                      ${coins.market_cap.toLocaleString()}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Crypto;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n    text: {\r\n        margin: \"50px auto 50px auto\",\r\n        width: \"20%\",\r\n        backgroundImage: \"linear-gradient(-225deg, #ac32e4 10%, #7918f2 58%, #4801ff 100%)\",\r\n    },\r\n\r\n    searchContainer: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        borderRadius: 0\r\n    },\r\n\r\n    border: {\r\n        borderRadius: 0,\r\n        '&:hover fieldset': {\r\n            borderColor: 'white ! important',\r\n        },\r\n\r\n    },\r\n\r\n    focused: {\r\n        '& fieldset': { borderColor: 'white ! important' },\r\n    },\r\n    color: {\r\n        color: \"white\"\r\n    }\r\n})\r\n\r\n\r\nconst Search = ({ changeHandler }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.searchContainer}>\r\n            <TextField id=\"search\" color=\"secondary\" label={<SearchIcon style={{ color: \"white\" }} />} placeholder=\"Search Coin\" size=\"medium\" variant=\"outlined\" onChange={changeHandler} className={classes.text} InputProps={{\r\n                classes: {\r\n                    root: classes.border,\r\n                    focused: classes.focused,\r\n                    input: classes.color\r\n                }\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        color: \"white\",\r\n        margin: \"50px auto 20px auto\",\r\n    }\r\n\r\n})\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h3\" className={classes.header}>\r\n                Crypto Currency Tracker\r\n          </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from \"react\";\r\n\r\nimport Crypto from \"./Crypto\";\r\nimport Search from \"./Search\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Header from \"./Header\";\r\n\r\nimport { QueryClientProvider, QueryClient } from \"react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = () => {\r\n  const [searchCoin, setSearchCoin] = useState(\"\");\r\n  const changeHandler = (e) => {\r\n    setSearchCoin(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Header />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Search changeHandler={changeHandler} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Crypto crypto={crypto} searchCoin={searchCoin} />\r\n        </Grid>\r\n      </Grid>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}